<!DOCTYPE html>
<html lang="lt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Skiemenavimas - ƒÆvair≈´s ≈æod≈æiai</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=OpenDyslexic:wght@400;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'OpenDyslexic', 'Comic Sans MS', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            line-height: 1.8;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }

        h1 {
            color: #667eea;
            text-align: center;
            margin-bottom: 10px;
            font-size: 2.2em;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        }

        .subtitle {
            text-align: center;
            color: #666;
            margin-bottom: 30px;
            font-size: 1.1em;
        }

        .progress-container {
            background: #f0f0f0;
            border-radius: 10px;
            height: 30px;
            margin-bottom: 30px;
            overflow: hidden;
            position: relative;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            width: 0%;
            transition: width 0.5s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }

        .instructions {
            background: #e3f2fd;
            border-left: 5px solid #2196F3;
            padding: 20px;
            margin-bottom: 30px;
            border-radius: 10px;
            font-size: 1.1em;
        }

        .instructions strong {
            color: #1976D2;
            font-size: 1.2em;
        }

        .word-display {
            text-align: center;
            margin: 40px 0;
        }

        .word-container {
            display: inline-flex;
            gap: 3px;
            font-size: 3em;
            font-weight: bold;
            color: #333;
            letter-spacing: 2px;
            padding: 20px;
            background: #f9f9f9;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .letter {
            cursor: pointer;
            padding: 10px 15px;
            border-radius: 8px;
            transition: all 0.3s ease;
            user-select: none;
        }

        .letter:hover {
            background: #fff3e0;
            transform: translateY(-3px);
        }

        .letter.selected {
            background: #4CAF50;
            color: white;
            transform: scale(1.1);
        }

        .letter.error {
            background: #f44336;
            color: white;
            animation: shake 0.5s;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin: 30px 0;
            flex-wrap: wrap;
        }

        button {
            padding: 15px 30px;
            font-size: 1.1em;
            font-family: 'OpenDyslexic', sans-serif;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: bold;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        }

        .btn-check {
            background: #4CAF50;
            color: white;
        }

        .btn-check:hover {
            background: #45a049;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.3);
        }

        .btn-reset {
            background: #ff9800;
            color: white;
        }

        .btn-reset:hover {
            background: #e68900;
            transform: translateY(-2px);
        }

        .btn-audio {
            background: #2196F3;
            color: white;
        }

        .btn-audio:hover {
            background: #1976D2;
            transform: translateY(-2px);
        }

        .btn-next {
            background: #9C27B0;
            color: white;
        }

        .btn-next:hover {
            background: #7B1FA2;
            transform: translateY(-2px);
        }

        .feedback {
            text-align: center;
            margin: 20px 0;
            padding: 20px;
            border-radius: 10px;
            font-size: 1.3em;
            font-weight: bold;
            min-height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .feedback.success {
            background: #c8e6c9;
            color: #2e7d32;
            border: 3px solid #4CAF50;
        }

        .feedback.error {
            background: #ffcdd2;
            color: #c62828;
            border: 3px solid #f44336;
        }

        .hint {
            background: #fff9c4;
            border-left: 5px solid #FFC107;
            padding: 15px;
            margin: 20px 0;
            border-radius: 10px;
            font-size: 1.05em;
        }

        .stats {
            display: flex;
            justify-content: space-around;
            margin-top: 30px;
            padding: 20px;
            background: #f5f5f5;
            border-radius: 10px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 2em;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            color: #666;
            margin-top: 5px;
        }

        .final-results {
            text-align: center;
            padding: 40px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            margin-top: 20px;
        }

        .final-results h2 {
            font-size: 2.5em;
            margin-bottom: 20px;
        }

        .final-score {
            font-size: 4em;
            margin: 20px 0;
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }

            h1 {
                font-size: 1.8em;
            }

            .word-container {
                font-size: 2em;
            }

            button {
                padding: 12px 20px;
                font-size: 1em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéØ Skiemenavimas</h1>
        <p class="subtitle">ƒÆvair≈´s ≈æod≈æiai</p>

        <div class="progress-container">
            <div class="progress-bar" id="progressBar">0 / 10</div>
        </div>

        <div class="instructions">
            <strong>üìù U≈æduotis:</strong> Perskaityk ≈æodƒØ ir pa≈æymƒók vietas, kur reikia skirti skiemenis. Spustelƒók ant raid≈æi≈≥, kur baigiasi kiekvienas skiemuo!
        </div>

        <div class="hint">
            üí° <strong>Patarimas:</strong> Skiemuo paprastai baigiasi prie≈° kitƒÖ priebalsƒØ arba ≈æod≈æio gale. Pavyzd≈æiui: mo-ky-to-ja
        </div>

        <div class="word-display">
            <div class="word-container" id="wordContainer"></div>
        </div>

        <div class="controls">
            <button class="btn-audio" onclick="playAudio()">üîä Klausyti</button>
            <button class="btn-check" onclick="checkAnswer()">‚úì Patikrinti</button>
            <button class="btn-reset" onclick="resetWord()">‚Ü∫ I≈° naujo</button>
            <button class="btn-next" onclick="nextWord()" id="nextBtn" style="display:none;">‚Üí Kitas ≈æodis</button>
        </div>

        <div class="feedback" id="feedback"></div>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-value" id="correctCount">0</div>
                <div class="stat-label">Teisingai</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="totalCount">0</div>
                <div class="stat-label">I≈° viso</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="percentCount">0%</div>
                <div class="stat-label">Tikslumas</div>
            </div>
        </div>
    </div>

    <script>
        const words = [
            { word: 'mokytoja', syllables: [2, 4, 6] },
            { word: 'mokinys', syllables: [2, 4] },
            { word: 'automobilis', syllables: [2, 4, 6, 8] },
            { word: 'knygynas', syllables: [3, 5] },
            { word: 'pavasaris', syllables: [2, 4, 6] },
            { word: 'kompiuteris', syllables: [3, 6, 8] },
            { word: 'atƒójimas', syllables: [1, 3, 5] },
            { word: 'dramblys', syllables: [5] },
            { word: 'egzaminas', syllables: [2, 4, 6] },
            { word: 'sƒÖsiuvinys', syllables: [2, 5, 7] }
        ];

        let currentWordIndex = 0;
        let selectedPositions = [];
        let correctAnswers = 0;
        let totalAttempts = 0;
        let isAnswered = false;

        function loadWord() {
            const currentWord = words[currentWordIndex];
            const wordContainer = document.getElementById('wordContainer');
            wordContainer.innerHTML = '';
            selectedPositions = [];
            isAnswered = false;
            
            document.getElementById('feedback').textContent = '';
            document.getElementById('feedback').className = 'feedback';
            document.getElementById('nextBtn').style.display = 'none';

            for (let i = 0; i < currentWord.word.length; i++) {
                const letter = document.createElement('span');
                letter.className = 'letter';
                letter.textContent = currentWord.word[i];
                letter.dataset.position = i;
                letter.onclick = () => toggleLetter(i);
                wordContainer.appendChild(letter);
            }

            updateProgress();
        }

        function toggleLetter(position) {
            if (isAnswered) return;

            const letters = document.querySelectorAll('.letter');
            const index = selectedPositions.indexOf(position);

            if (index > -1) {
                selectedPositions.splice(index, 1);
                letters[position].classList.remove('selected');
            } else {
                selectedPositions.push(position);
                letters[position].classList.add('selected');
            }
        }

        function checkAnswer() {
            if (isAnswered) return;
            if (selectedPositions.length === 0) {
                showFeedback('Pa≈æymƒók bent vienƒÖ raidƒô!', 'error');
                return;
            }

            isAnswered = true;
            totalAttempts++;

            const currentWord = words[currentWordIndex];
            selectedPositions.sort((a, b) => a - b);
            const correctSyllables = currentWord.syllables.sort((a, b) => a - b);

            const isCorrect = JSON.stringify(selectedPositions) === JSON.stringify(correctSyllables);

            const letters = document.querySelectorAll('.letter');
            
            if (isCorrect) {
                correctAnswers++;
                showFeedback('‚úÖ Puiku! Teisingai paskirstei skiemenis!', 'success');
                playSuccessSound();
                
                selectedPositions.forEach(pos => {
                    letters[pos].classList.add('selected');
                });
            } else {
                showFeedback('‚ùå Bandyk dar kartƒÖ! Patikrink skiemen≈≥ ribas.', 'error');
                playErrorSound();
                
                letters.forEach(letter => {
                    letter.classList.remove('selected');
                    letter.classList.add('error');
                });

                setTimeout(() => {
                    letters.forEach(letter => {
                        letter.classList.remove('error');
                    });
                    selectedPositions = [];
                    isAnswered = false;
                }, 1000);
                return;
            }

            document.getElementById('nextBtn').style.display = 'inline-block';
            updateStats();
        }

        function resetWord() {
            if (isAnswered) return;
            
            selectedPositions = [];
            const letters = document.querySelectorAll('.letter');
            letters.forEach(letter => {
                letter.classList.remove('selected', 'error');
            });
            document.getElementById('feedback').textContent = '';
            document.getElementById('feedback').className = 'feedback';
        }

        function nextWord() {
            currentWordIndex++;
            if (currentWordIndex >= words.length) {
                showFinalResults();
                return;
            }
            loadWord();
        }

        function showFeedback(message, type) {
            const feedback = document.getElementById('feedback');
            feedback.textContent = message;
            feedback.className = `feedback \${type}`;
        }

        function updateProgress() {
            const progressBar = document.getElementById('progressBar');
            const percentage = ((currentWordIndex) / words.length) * 100;
            progressBar.style.width = percentage + '%';
            progressBar.textContent = `\${currentWordIndex} / \${words.length}`;
        }

        function updateStats() {
            document.getElementById('correctCount').textContent = correctAnsw
